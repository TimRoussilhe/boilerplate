/*
 * $size: size in pixel you want to have at $breakpoint
 * $min-size: min size of the responsive font: doesn't go smaller
 * $breakpoint: breakpoint to start using responsive fontSize
 */
/*
 * Flexbox Grid generator
 *
 */
/*
 * Styles a <textarea> with horizontal line rules
 * $line-height: px value of textarea's line-height
 * $rule-height: px value of desired rule height
 * $rule-color: desired color of horizontal rules
 */
@font-face {
  font-family: "ProductSans-Bold";
  src: url("/static/gpride/fonts/ProductSans-Bold-Web.eot");
  src: url("/static/gpride/fonts/ProductSans-Bold-Web.eot?#iefix") format("embedded-opentype"), url("/static/gpride/fonts/ProductSans-Bold-Web.woff2") format("woff2"), url("/static/gpride/fonts/ProductSans-Bold-Web.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Roboto-Bold";
  src: url("/static/gpride/fonts/Roboto-Bold.eot");
  src: url("/static/gpride/fonts/Roboto-Bold.eot?#iefix") format("embedded-opentype"), url("/static/gpride/fonts/Roboto-Bold.woff2") format("woff2"), url("/static/gpride/fonts/Roboto-Bold.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Roboto-Regular";
  src: url("/static/gpride/fonts/Roboto-Regular.eot");
  src: url("/static/gpride/fonts/Roboto-Regular.eot?#iefix") format("embedded-opentype"), url("/static/gpride/fonts/Roboto-Regular.woff2") format("woff2"), url("/static/gpride/fonts/Roboto-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Roboto-Medium";
  src: url("/static/gpride/fonts/Roboto-Medium.eot");
  src: url("/static/gpride/fonts/Roboto-Medium.eot?#iefix") format("embedded-opentype"), url("/static/gpride/fonts/Roboto-Medium.woff2") format("woff2"), url("/static/gpride/fonts/Roboto-Medium.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

.vertical-align-wrapper {
  display: table-cell;
  vertical-align: middle;
  text-align: center; }

/*
  For more information about flex, check out Chris Coyier's article: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
  Based on -> https://github.com/kristoferjoseph/flexboxgrid/blob/master/css/flexboxgrid.css
*/
/* ---- Flex alignment classes ---- */
.row {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  width: 100%; }
  .row.reverse {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -webkit-flex-direction: row-reverse;
        -ms-flex-direction: row-reverse;
            flex-direction: row-reverse; }
  .row.full {
    margin: 0;
    padding: 0; }
  .row.show-overlay [class*='col-'] {
    position: relative; }
    .row.show-overlay [class*='col-']::before {
      content: "";
      z-index: 100;
      display: block;
      position: absolute;
      background-color: rgba(215, 215, 215, 0.5);
      width: calc(100% - 15px);
      height: 100%; }

.col {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }
  .col.reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    -webkit-flex-direction: column-reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse; }

/* Vertical Align */
.vertical-align-wrapper {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

/* Justify-content */
.start {
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start; }

.center {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.end {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }

.around {
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around; }

.between {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

/* Align-items */
.top {
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
      -ms-flex-align: start;
          align-items: flex-start; }

.middle {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.bottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
      -ms-flex-align: end;
          align-items: flex-end; }

.column {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

/* Order */
.first {
  -webkit-box-ordinal-group: 0;
  -webkit-order: -1;
      -ms-flex-order: -1;
          order: -1; }

.last {
  -webkit-box-ordinal-group: 2;
  -webkit-order: 1;
      -ms-flex-order: 1;
          order: 1; }

.u-scroll-v {
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch; }

.u-scroll-h {
  overflow-x: auto;
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch; }

.u-scroll-past {
  height: 100vh !important;
  margin-bottom: 150px; }

* {
  vertical-align: baseline;
  border: 0 none;
  outline: 0;
  padding: 0;
  margin: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

html, body, div, span, applet, object, iframe, table, caption, tbody, tfoot, thead, tr, th, td,
del, dfn, em, font, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var,
h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code,
dl, dt, dd, ol, ul, li, fieldset, form, label, legend, button {
  font-family: "Roboto-Regular", "Helvetica", "Arial", sans-serif;
  font-weight: normal;
  font-style: normal;
  color: #2b2d30;
  font-size: 1.4rem;
  line-height: 1.86;
  letter-spacing: 0.3px;
  font-weight: normal;
  font-style: normal;
  vertical-align: baseline;
  border: 0 none;
  outline: 0;
  padding: 0;
  margin: 0; }

button {
  border: none;
  border-radius: 0;
  background-color: transparent;
  cursor: pointer; }

[role="button"],
input[type="submit"],
input[type="reset"],
input[type="button"],
button {
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

/* Reset `button` and button-style `input` default styles */
input[type="submit"],
input[type="reset"],
input[type="button"],
button {
  background: none;
  border: 0;
  color: inherit;
  /* cursor: default; */
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  -webkit-appearance: button;
  /* for input */
  -webkit-user-select: none;
  /* for button */
  -moz-user-select: none;
  -ms-user-select: none; }

input::-moz-focus-inner,
button::-moz-focus-inner {
  border: 0;
  padding: 0; }

li {
  list-style: none; }

a {
  text-decoration: none;
  cursor: pointer;
  line-height: normal; }

/*
 I had to define @mixin to be able to re-use them in _reponsive-utils.
 it's not optimized as it generates 2 different classes, but it does the job
*/
.--skew-up {
  -webkit-transform: skewY(-15deg);
      -ms-transform: skewY(-15deg);
          transform: skewY(-15deg); }

/* Footer */
.--f-footer-regular14 {
  color: #FFF;
  font-family: "Roboto-Regular", "Helvetica", "Arial", sans-serif;
  font-weight: normal;
  font-style: normal;
  font-size: 1.4rem;
  line-height: 1.57143;
  letter-spacing: 0px; }

.--f-footer-regular10 {
  color: #FFF;
  font-family: "Roboto-Regular", "Helvetica", "Arial", sans-serif;
  font-weight: normal;
  font-style: normal;
  font-size: 1rem;
  line-height: 1.6;
  letter-spacing: 0px; }

.--f-footer-regular12 {
  font-family: "Roboto-Regular", "Helvetica", "Arial", sans-serif;
  font-weight: normal;
  font-style: normal;
  font-size: 1.2rem;
  line-height: 1.08333;
  letter-spacing: 0px; }

.--c-white {
  color: #FFF; }

.--c-black {
  color: #000; }

.--c-tangerine {
  color: #ff8c00; }

.--c-med-grey {
  color: #adada9; }

.--c-dark-grey {
  color: #2b2d30; }

.--c-orange {
  color: #FF9700; }

.--c-charcoal-grey {
  color: #515255; }

.--c-cool-grey {
  color: #959ca5; }

.--c-light-grey {
  color: #ededed; }

.--c-stack-grey {
  color: #7F7F7F; }

.--c-800-grey {
  color: #424242; }

.--c-600-grey {
  color: #757575; }

.--c-500-grey {
  color: #9E9E9E; }

.--c-400-grey {
  color: #9E9E9E; }

.--c-flag-red {
  color: #ED4D3C; }

.--c-flag-orange {
  color: #FF9700; }

.--c-flag-yellow {
  color: #FAC302; }

.--c-flag-green {
  color: #3BB15D; }

.--c-flag-blue {
  color: #4284f3; }

.--c-flag-purple {
  color: #800592; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 62.5%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

body {
  overflow: hidden;
  background-color: #FFF; }
  body.scroll-enabled {
    height: auto;
    overflow: auto; }
  body .block-events {
    pointer-events: none !important; }
  body.modal-scroll {
    height: auto;
    overflow: auto; }
    body.modal-scroll #content {
      height: 0px;
      overflow: hidden; }
    body.modal-scroll #content {
      height: 0px;
      overflow: hidden; }
    body.modal-scroll #parade-detail-google-maps-container {
      height: 0px;
      overflow: hidden; }
    body.modal-scroll #modal-container {
      position: relative; }
      body.modal-scroll #modal-container .modal-content-container {
        position: relative; }
        body.modal-scroll #modal-container .modal-content-container .modal {
          position: relative; }

@media (max-width: 768px) {
  html, body {
    height: 100%;
    overflow: auto; } }

#content {
  position: absolute;
  z-index: 5;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0; }
  @media (max-width: 768px) {
    #content {
      top: 56px; } }
  @media (max-width: 480px) {
    #content {
      top: 56px; } }

.reset-mg-inline {
  font-size: 0; }

body {
  background: blue;
  text-align: left; }

#header-container header {
  padding-top: 23px;
  padding-left: 24px; }
  @media (max-width: 768px) {
    #header-container header {
      padding-top: 0px;
      padding-bottom: 56px;
      background-color: #FFF; } }
  @media (max-width: 480px) {
    #header-container header {
      padding-top: 0px;
      padding-bottom: 56px; } }
  #header-container header ul button, #header-container header ul a {
    margin-right: 36px;
    -webkit-transition: opacity 0.5s ease-in-out;
    -o-transition: opacity 0.5s ease-in-out;
    transition: opacity 0.5s ease-in-out; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
